Index: wsgi_soap.py
===================================================================
--- wsgi_soap.py	(revision 39)
+++ wsgi_soap.py	(working copy)
@@ -161,11 +161,12 @@
             
             serviceName = environ['PATH_INFO'].split('/')[-1]
             service = self.getHandler(environ)
-            if serviceName.lower().endswith('wsdl'):
+            if (environ['QUERY_STRING'].endswith('wsdl') or environ['PATH_INFO'].endswith('wsdl')) and environ['REQUEST_METHOD'].lower() == 'get':
                 # get the wsdl for the service
                 #
                 # Assume path_info matches pattern
-                # /stuff/stuff/stuff/serviceName.wsdl or ?WSDL
+                # /stuff/stuff/stuff/serviceName.wsdl 
+                # or servicename/?WSDL or servicename?WSDL
                 #
                 serviceName = serviceName.split('.')[0]
                 url = reconstruct_url(environ).split('.wsdl')[0]
Index: service.py
===================================================================
--- service.py	(revision 39)
+++ service.py	(working copy)
@@ -22,7 +22,7 @@
                 _inMessage = kparams.get('_inMessage',name)
                 _inVariableNames = kparams.get('_inVariableNames',{})
                 _outMessage = kparams.get('_outMessage','%sResponse'%name)
-                _outVariableName = kparams.get('_outVariableName','retval')
+                _outVariableName = kparams.get('_outVariableName','%sResult' %name)
                 _mtom = kparams.get('_mtom',False)
                 
                 ns = None
Index: serializers/primitive.py
===================================================================
--- serializers/primitive.py	(revision 39)
+++ serializers/primitive.py	(working copy)
@@ -349,7 +349,7 @@
         self.serializer = serializer
         self.namespace = namespace
         if not type_name:
-            self.type_name = '%sArray'%self.serializer.get_datatype()
+            self.type_name = 'ArrayOf%s'%self.serializer.get_datatype()
         else:
             self.type_name = type_name
 
