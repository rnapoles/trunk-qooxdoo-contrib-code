{


 /*-------------------------------------------------------------------------
  access control
 -------------------------------------------------------------------------*/
  

  
  /**
   * This is the parent node for permissions.
   */
  "qcl:access": {
    "body": {
        "*":"body/qcl/access/access.mako"
    },
    "add": {
        "*":""
    }
  },     
  
  /**
   * A permission object, can have qcl:conditions as children
   */
  "qcl:permission": {
    "body": {
        "*":"body/qcl/access/permission.mako"
    },
    "add": {
        "*":""
    }
  },    
  
  /**
   * Adds a condition function to a permission object
   */
  "qcl:condition": {
    "body": {
        "*":"body/qcl/access/condition.mako"
    },
    "add": {
        "*":""
    }
  },      
  
  /**
   * Adds an updater to a permission
   */
  "qcl:updater": {
    "body": {
        "*":"body/qcl/access/updater.mako"
    },
    "add": {
        "*":""
    }
  },
  
  /**
  * Adds a dependency to a permission
  */
 "qcl:dependency": {
   "body": {
       "*":"body/qcl/access/dependency.mako"
   },
   "add": {
       "*":""
   }
 },     
     
  
  /*-------------------------------------------------------------------------
  databinding
 -------------------------------------------------------------------------*/

 /**
  * The qcl:bind extends qxt:bind by the possibility of binding 
  * a property of the object represented by the parent node to 
  * a config value, or a permission state.
  */    
 "qcl:bind": {
     "body": {
         "*":"body/qcl/bind.mako"
     },
     "add": {
         "*":""
     }
 },

 /**
  * The qcl:observe extends qxt:observe by the possibility of having 
  * a property of the object represented by the parent node observe 
  * a config value, or a permission state.
  */    
 "qcl:observe": {
   "body": {
       "*":"body/qcl/observe.mako"
   },
   "add": {
       "*":""
   }
 },    

 /**
  * The qcl:observe extends qxt:sync by the possibility of binding
  * a property of the object represented by the parent node to 
  * a config value, or a permission state and the other way round
  * (bi-directional binding)
  */   
 "qcl:sync": {
   "body": {
       "*":"body/qcl/sync.mako"
   },
   "add": {
       "*":""
   }
 },    
  
  /**
   * a login dialog widget
   */
  "qcl:loginDialog": {
    "extends" : "qx:widget",
    "add" : { "*":"" }, 
      "data": {
        "props": {
            "class": "qcl.ui.dialog.Login"
        }
    }
  },
 
 /**
  * A widget controller (currently only list-type widgets)
  */
 "qcl:controller": {
   "body": {
     "qx:list":"body/qcl/listController.mako",
     "qx:comboBox":"body/qcl/listController.mako",
     "qx:selectBox":"body/qcl/listController.mako",
     "qx:tree":"body/qcl/treeController.mako"
   },
   "add" : { "*":"" }
 },

  /**
   * A data store that retrieves its content with a jsonrpc request
   */  
  "qcl:jsonRpcStore": {
    "extends" : "qx:widget",
    "add" : { "*":"" }, 
      "data": {
        "props": {
            "class": "qcl.data.store.JsonRpc",
            "constructor-args":"url,serviceName,marshaler"
        }
    }
  }
}