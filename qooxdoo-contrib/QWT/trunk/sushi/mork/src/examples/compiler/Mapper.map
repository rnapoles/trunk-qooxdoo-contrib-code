# ยง{{header}}:
#
# This is file examples/compiler/Mapper.map,
# Mork version 0.6  Copyright ยง 1998-2002  Michael Hartmeier
#
# Mork is licensed under the terms of the GNU Lesser General Public License.
# It is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the file license.txt for details.
#
# ยง.

mapper compiler.Mapper;

grm = "program.grm";

import compiler:
    Assign, Binary, Block, Declarations, If, Input, Number, Print, Program,
    StringLiteral, Variable, VariableReference, While, Int, Str, Operator;

Program           => Program;

Declarations      => Declarations:
                        >\\Program >\Block//Stmt//Declarations >\Block//VariableReference ;
Variable          => Variable;
IntType           => Int.TYPE;
StrType           => Str.TYPE;

Block             => Block;
Assign            => Assign;
Input             => Input;
Print             => Print;
If                => If;
While             => While;

Compare           => Binary.createRightOptional;
Sum               => Binary.createLeftOptional;
Prod              => Binary.createLeftOptional;
VariableReference => VariableReference;

id                => [text];
num               => Number;
                  => [text] : > num;
str               => StringLiteral;
                  => [text] : > str;

"+"               => Operator.ADD;
"-"               => Operator.SUB;
"*"               => Operator.MUL;
"/"               => Operator.DIV;

"!="              => Operator.NE;
"=="              => Operator.EQ;
"<"               => Operator.LT;
"<="              => Operator.LE;
">"               => Operator.GT;
">="              => Operator.GE;
