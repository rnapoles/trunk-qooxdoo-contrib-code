# ************************************************************************
#   
#   qooxdoo - the new era of web development
#   
#   http://qooxdoo.org
#   
#   Copyright:
#     2006-2008 1&1 Internet AG, Germany, http://www.1and1.org
#   
#   License:
#     LGPL: http://www.gnu.org/licenses/lgpl.html
#     EPL: http://www.eclipse.org/org/documents/epl-v10.php
#     See the LICENSE file in the project's top-level directory for details.
#   
#   Authors:
#     * Michael Hartmeier (mlhartme)
#   
# ************************************************************************

mapper org.qooxdoo.sushi.compiler.MapperMapper;

grm = "mapper.grm";

import org.qooxdoo.sushi.mapping:
    Import, Internal, Library, Path;
import org.qooxdoo.sushi.compiler:
    GrammarSyntax, Specification, Stubs, Syntax;
import org.qooxdoo.sushi.semantics:
    BuiltIn;
import java.lang:
    Boolean, Integer, String;

#
# overall structure

Mapper              => Specification:
                         > //Implicit
                         > //ImplicitPath
                         > //LocalPath
                         > //NormalPath ;
  :SideEffect       => Stubs.sideEffect;
SyntaxFile          => (Syntax):
                         > \\Mapper
                         > Grammar
                         > SymbolTable;
  :Grammar          => Stubs.getIFGrammar:
                         > \\Mapper//Attribute;
  :SymbolTable      => Stubs.getIFSymbolTable:
                         > \\Mapper//Symbol
                         > \\Mapper//AttributeName
                         > \\Mapper//Attribute;
Grammar             => Stubs.loadGrammar;
  :Mork             => [env]: > Grammar;
Dtd                 => Stubs.loadDtd;
  :Mork             => [env]: > Dtd;
Imports             => Library:
                         > \\Mapper//ClassRef
                         > \\Mapper//MemberRef
                         > \\Mapper//Copy;
PackageName         => (String):
                         > \\Import//Class;
Class               => Import.create;
Name                => Stubs.name;

#
# constructors

ClassRef            => Library.lookupClass;
MemberRef           => Library.lookupMember;
Internal            => Internal;
Copy                => Stubs.copyFunctionRef;

#
# mapping

Symbol              => Stubs.symbolRef:
                         > \\Group//Attribute
                         > \\Group//AttributeName
                         > \\Group//LocalPath;
Attribute           => Stubs.createDefinition:
                         > \\Mapper
                         > //NormalPath
                         > //LocalPath
                         > //Implicit
                         > //ImplicitPath;
AttributeName       => Stubs.attributeName;

#
# paths

Implicit            => Stubs.implicitPath: >\\SideEffect;
ImplicitPath        => Stubs.implicitPath: >\\SideEffect;
LocalPath           => Stubs.localPath: >\\SideEffect;
NormalPath          => Stubs.normalPath: >\\SideEffect;
Step                => Stubs.step;
Downs               => Path.DOWNS;
Down                => Path.DOWN;
Ups                 => Path.UPS;
Up                  => Path.UP;

#
# lexical elements

StringLiteral       => [text];
Identifier          => [text];
