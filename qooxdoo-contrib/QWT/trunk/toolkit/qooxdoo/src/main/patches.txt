### qx/core/Init.java
***
this.debug("application: " + this.getApplication().classname);
this.debug("application: " + this.getApplication().classname); QwtBeforeMain();
***
this.info("main runtime: " + (new Date - start) + "ms");
this.info("main runtime: " + (new Date - start) + "ms"); QwtAfterMain();
### qx/ui/core/ClientDocumentBlocker.java
***
public native void getFocusRoot();
public native Object getFocusRoot();
### qx/util/manager/Value.java
***
public native Object resolveDynamic(String value);
public native java.lang.Object resolveDynamic(String value);
### qx/locale/LocalizedString.java
***
public native String toString_();
public native java.lang.String toString_();
### qx/ui/resizer/Resizer.java
***
public native void _changeHeight(Object value);
public native void _changeHeight(int value);
***
public native void _changeWidth(Object value);
public native void _changeWidth(int value);
### qx/ui/resizer/ResizablePopup.java
***
public native void _changeHeight(Object value);
public native void _changeHeight(int value);
***
public native void _changeWidth(Object value);
public native void _changeWidth(int value);
### qx/core/Client.java
***
this._fireBugActive = (window.console && console.log && console.debug && console.assert);
this._fireBugActive = (window.console && console.log && console.debug);
### qx/core/Property.java
***
for (var i=0, a=config.group,
if (typeof _isrhino != 'undefined') { return; } for (var i=0, a=config.group,
### qx/ui/core/Widget.java
***
native void renderPadding(Object changes);
public native void renderPadding(Object changes);
+++
    public static final String AUTO = "auto";

### qx/ui/form/TextField.java
+++
    /**
     * @native
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.addEventListener("changeValue", function(e) {
            listener.notify(e);
        });
     */
    public native void addChangeValueListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);

### qx/ui/form/Button.java
+++
    /**
     * @native
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.addEventListener("execute", function(e) {
          listener.notify(e);
        });
     */
    public native void addExecuteListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);

### qx/ui/toolbar/Button.java
+++
    /**
     * @native
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.addEventListener("execute", function(e) {
          listener.notify(e);
        });
     */
    public native void addExecuteListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);

### qx/ui/menu/Button.java
+++

    /**
     * @native
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.addEventListener("execute", function(e) {
          listener.notify(e);
        });
     */
    public native void addExecuteListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);

### qx/ui/basic/Image.java
+++
    public static final String PREFIX = "images/";

### qx/ui/tree/Tree.java
***
public class Tree extends TreeFolder
public class Tree<T> extends TreeFolder<T>
+++
    public static <T> Tree<T> create(T root) {
        Tree<T> result;
        
        result = new Tree<T>();
        result.setNode(root);
        result.setLabel(root.toString());
        return result;
    }

    /**
     * @native
       //
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.getManager().addEventListener("changeSelection", function(e) {
          listener.notify(e);
        });
     */
    public native void addChangeSelectionListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);

### qx/ui/tree/AbstractTreeElement.java
*** 
class AbstractTreeElement extends qx.ui.layout.BoxLayout
class AbstractTreeElement<T> extends qx.ui.layout.BoxLayout
+++

    private T node;
    
    public T getNode() {
        return node;
    }

    public void setNode(T node) {
        this.node = node;
    }

### qx/ui/tree/TreeFile.java
*** 
class TreeFile extends AbstractTreeElement
class TreeFile<T> extends AbstractTreeElement<T>
### qx/ui/tree/TreeFolder.java
*** 
class TreeFolder extends AbstractTreeElement
class TreeFolder<T> extends AbstractTreeElement<T>
+++
    public TreeFile<T> addFile(T node) {
        TreeFile<T> file;
        
        file = new TreeFile<T>();
        file.setNode(node);
        file.setLabel(node.toString());
        file.getLabelObject().setMode("html");
        add(file);
        return file;
    }
    
    public TreeFolder<T> addFolder(T node) {
        TreeFolder<T> folder;
        
        folder = new TreeFolder<T>();
        folder.setNode(node);
        folder.setLabel(node.toString());
        folder.getLabelObject().setMode("html");
        add(folder);
        return folder;
    }
 
### qx/ui/form/ComboBox.java
*** 
public class ComboBox extends qx.ui.layout.HorizontalBoxLayout
public class ComboBox<T> extends qx.ui.layout.HorizontalBoxLayout
+++
    // TODO: ... arguments
    public static <E extends Enum> ComboBox<E> createE(E[] values) {
        ComboBox<E> combo;
        
        combo = new ComboBox<E>();
        for (E v : values) {
            combo.addString(v.name(), v);
        }
        return combo;
    }
 
    // TODO: Collections.asList
    // TODO: ... arguments
    public static <T> ComboBox<T> createT(T[] values) {
        ComboBox<T> combo;
        
        combo = new ComboBox<T>();
        for (T value : values) {
            combo.addValue(value);
        }
        return combo;
    }

    // TODO: ... arguments
    public static <T> ComboBox<T> createList(java.util.List<T> values) {
        ComboBox<T> combo;
        
        combo = new ComboBox<T>();
        for (T value : values) {
            combo.addValue(value);
        }
        return combo;
    }

    /**
     * @native
        // #pre(org.qooxdoo.toolkit.qooxdoo.EventListener)
        this.addEventListener("changeValue", function(e) {
          listener.notify(e);
        });
     */
    public native void addChangeValueListener(org.qooxdoo.toolkit.qooxdoo.EventListener listener);


    //--
    
    //-- Qooxdoo property fields start --
 
    public java.util.List<qx.ui.core.Widget> children() {
        java.util.List<qx.ui.core.Widget> result;
        
        result = new java.util.ArrayList<qx.ui.core.Widget>();
        children(result);
        return result;
    }

    /**
     * @native
        var c = this.getList().getChildren();
        var max = c.length;
        for (var i = 0; i < max; i++) {
          result.add(c[i]);
        }
        return result;
     */
    public native void children(java.util.List<? extends qx.ui.core.Widget> result);

    /** TODO: difference to getValue/setValue */
    public T getSelectedValue() {
        ListItem<?> selected;
        
        selected = (ListItem<?>) getSelected();
        return (T) selected.getValue();
    }

    // TODO: invoke selectionChanged?
    public void setSelectedValue(T value) {
        ListItem<T> item;
        
        item = lookup(value);
        if (item == null) {
            throw new IllegalArgumentException("" + value);
        }
        selected = item;
        setSelected(selected);
    }

    public ListItem<T> lookup(T value) {
        ListItem<T> item;
        
        for (qx.ui.core.Widget child : children()) {
            item = (ListItem<T>) child;
            if (value.equals(item.getValue())) {
                return item;
            }
        }
        return null;
    }
    
    //-- Qooxdoo property access methods end --

    public void addValue(T value) {
        addString(value.toString(), value);
    }

    public void addString(String text, T value) {
        ListItem<T> item;

        item = new ListItem<T>(text, null, value);
        if (selected == null) {
            selected = item;
        }
        add(item);
    }

### qx/ui/form/ListItem.java
*** 
public class ListItem extends qx.ui.basic.Atom
public class ListItem<T> extends qx.ui.basic.Atom
***
public native Object getValue();
public native T getValue();
*** 
public native Object setValue(Object value);
public native T setValue(T value);